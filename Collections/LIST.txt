List<String> arrayList = new ArrayList<>();
List<String> linkedList = new LinkedList<>();
List<String> vector = new Vector<>();
List<String> stack = new Stack<>();

1) ArrayList ---------------
Просто обычный список, максимальное количество еллементов по INT_MAX_SIZE;
при обьявлении можно задать initialCapacity на количество еллементов в списке new ArrayList<>(количество эллементов)
Работает по типу массива, если надо добавить эллемент в середину то последующие эллементы надо переместить
2) LinkedList --------------
Сделано в виде ссылок (NODE) на следующий и предидущий эллемент.
для того что бы найти еллемнт надо искать с самого начала. для того что бы вставить в середину нужно менять ссылки
на след и предидущий эллемент.
3) Vector -----------------
Почти тоже самое что и LinkedList но сделано для безопасног использования в многопоточных приложениях!
4) Stack ------------------
Last in first out стек. Тоже безопасный в отношении потоков. Екстендится от Vector

Методы: 

.add(E): boolean - добавить эллемент E в коллекцию
.add(int, E): void - добавляет эллемент в определенную позицию

.set(int, E): E - Заменяет эллемент на определенной позиции

.get(int): E - возвращает эллемент с определенной позиции

.remove(Object): bollean - удалить эллемент из коллекции
.remove(int): E - удаляет еллемент с определнной позиции и возвращает его и сдвигает все эллементы влево

.indexOf(Object): int - возвращает позиции первого совпадения обьекта с эллементов в коллекции или -1 если нету совпадений
.lasIndexOf(Object): int - возвращает позиции последнего совпадения обьекта с эллементов в коллекции или -1 если нету совпадений

.size(): int - размер коллекции
.isEmpty(): boolean - пустая ли коллекция
.contains(Object): boolean - проверка существует ли Object  внутри коллекции
.toArray(): Object[] - превращает коллекцию в массив
.containsAll(Collection<?>): boolean - проверка содержит ли данная коллекция внутри себя другую коллекцию
.addAll(Collection<? extends E>): boolean - добавляет в сет все еллементы из коллекции
.removeAll(Collection<?>): boolean - удаляет из сета все еллементы которые есть в передеанной аргументом коллекции
.clear(): boolean - удаляет все эллементы из коллекции
.equals(Object): boolean - сравнивает коллекцию с обьектом

